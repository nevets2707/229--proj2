Project 2A

1) Steven Monson - srmonson

2) SimpleHero - First it sees if any of it's neighbors are edible and grabs one if it is. Then it tries to find an eatable that the hero can reach and that all other eatables can be reached from that spot. If none can be reached it chooses the first edible available. Then it uses a breadth first search to find a path to the edible.

SmartHero - Avoid enemies

SmartEnemy - Find closest eatable. Stay on that eatable. If hero one away get it

SmartPowerup - Find closest enemy. Stay on that enemy
3) 

4) Pos.cpp - Used to hold and compare the vertices for finding a goal and traversing to it. It also holds an array of Pos pointers to keep track of the path to get to that vertice. 

simplehero.cpp - Has the method to select which neighbor to move to based on its the findGoal and BFSearch methods described above




